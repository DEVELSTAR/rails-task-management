c
email: params[:email]
user
c
JSON.parse(response.body)['errors']
c
Task.exists?(task1.id) == true
Task.exists?(task1.id)
c
current_user.tasks
c
current_user.tasks
current_user
c
request.headers['token']
c
@task_ids - tasks.pluck(:id)
deleted_count == @task_ids.size
deleted_count = tasks.destroy_all.count
@task_ids
tasks = Task.where(id: @task_ids)
n
tasks = Task.where(id: @task_ids)
@task_ids
c
@task_ids
c
parsed_response['errors'][0]
c
parsed_response['errors'][0]
c
parsed_response['errors'][0]
parsed_response['errors'][]
parsed_response['errors']
c
Task.all
Task.count
JSON.parse(response.body)
response.count
response
JSON.parse(response)
response
c
result = TaskBulkDeleteService.new(params[:task_ids]).call
result = Api::V1::TaskBulkDeleteService.new(params[:task_ids]).call
c
Api::V1::TaskBulkDeleteService.new(params[:task_ids]).call
TaskBulkDeleteService.new(params[:task_ids]).call
Api::V1::TaskBulkDeleteService.new(params[:task_ids]).call
c
Api::V1::TaskBulkDeleteService.new(params[:task_ids]).call
TaskBulkDeleteService.new(params[:task_ids]).call
c
TaskBulkDeleteService.new(params[:task_ids]).call
Api::V1::TaskBulkDeleteService.new(params[:task_ids]).call
c
@task = Task.find_by(id: params[:id])
@task = Task.find(params[:id])
@task = Task.find(params[:id])~
[200~@task = Task.find(params[:id])~
